/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsIDOMEventTarget.idl"

interface nsIDOMEventListener;
interface nsIDOMMozSmsFilter;
interface nsIDOMMozSmsSegmentInfo;
interface nsIDOMDOMCursor;
interface nsIDOMDOMRequest;
interface nsIDOMBlob;

[scriptable, builtinclass, uuid(efff5276-0f3f-4137-9b16-66e894400e01)]
interface nsIDOMMozMobileMessageManager : nsIDOMEventTarget
{
  nsIDOMMozSmsSegmentInfo getSegmentInfoForText(in DOMString text);

  /**
   * Send a text message to recipient(s) specified by |numbers| via SMS.
   *
   * @param number   A string phone number or an array of strings.
   * @param message  A test message to send.
   *
   * @return A nsIDOMDOMRequest object when sending to only one recipient; an
   *         array of nsIDOMDOMRequest objects when sending to multiple
   *         recipients.  A SmsEvent is passed to request callbacks.  On
   *         success, the |event.target.result| is an nsIDOMMozSmsMessage
   *         representing the sent message; otherwise, it's a numeric code for
   *         the error occurred.  See nsIMobileMessageCallback::*_ERROR for
   *         possible values and meanings.
   */
  jsval send(in jsval number, in DOMString message);

  nsIDOMDOMRequest sendMMS(in jsval parameters /* MmsParameters */);

  [binaryname(GetMessageMoz)]
  nsIDOMDOMRequest getMessage(in long id);

  // The parameter can be either a message id or a nsIDOMMoz{Mms,Sms}Message.
  nsIDOMDOMRequest delete(in jsval param);

  // Iterates through nsIDOMMoz{Mms,Sms}Message.
  nsIDOMDOMCursor getMessages(in nsIDOMMozSmsFilter filter, in boolean reverse);

  nsIDOMDOMRequest markMessageRead(in long id, in boolean aValue);

  // Iterates through nsIDOMMozMobileMessageThread.
  nsIDOMDOMCursor getThreads();

  nsIDOMDOMRequest retrieveMMS(in long id);

  [implicit_jscontext] attribute jsval onreceived;
  [implicit_jscontext] attribute jsval onretrieving;
  [implicit_jscontext] attribute jsval onsending;
  [implicit_jscontext] attribute jsval onsent;
  [implicit_jscontext] attribute jsval onfailed;
  [implicit_jscontext] attribute jsval ondeliverysuccess;
  [implicit_jscontext] attribute jsval ondeliveryerror;
};
