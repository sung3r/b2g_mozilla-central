/*
 * Generated by gdbus-codegen 2.38.1. DO NOT EDIT.
 *
 *   gdbus-codegen --interface-prefix org.ofono. \
 *                 --generate-c-code gdbusmodem \
 *                 --c-namespace OfonoGDBus \
 *                 org.ofono.Modem.xml
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __GDBUSMODEM_H__
#define __GDBUSMODEM_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.ofono.Modem */

#define OFONO_GDBUS_TYPE_MODEM (ofono_gdbus_modem_get_type ())
#define OFONO_GDBUS_MODEM(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), OFONO_GDBUS_TYPE_MODEM, OfonoGDBusModem))
#define OFONO_GDBUS_IS_MODEM(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), OFONO_GDBUS_TYPE_MODEM))
#define OFONO_GDBUS_MODEM_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), OFONO_GDBUS_TYPE_MODEM, OfonoGDBusModemIface))

struct _OfonoGDBusModem;
typedef struct _OfonoGDBusModem OfonoGDBusModem;
typedef struct _OfonoGDBusModemIface OfonoGDBusModemIface;

struct _OfonoGDBusModemIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_get_properties) (
    OfonoGDBusModem *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_set_property) (
    OfonoGDBusModem *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_property,
    GVariant *arg_value);

  gboolean  (*get_emergency) (OfonoGDBusModem *object);

  const gchar *const * (*get_features) (OfonoGDBusModem *object);

  const gchar *const * (*get_interfaces) (OfonoGDBusModem *object);

  gboolean  (*get_lockdown) (OfonoGDBusModem *object);

  const gchar * (*get_manufacturer) (OfonoGDBusModem *object);

  const gchar * (*get_model) (OfonoGDBusModem *object);

  const gchar * (*get_name) (OfonoGDBusModem *object);

  gboolean  (*get_online) (OfonoGDBusModem *object);

  gboolean  (*get_powered) (OfonoGDBusModem *object);

  const gchar * (*get_revision) (OfonoGDBusModem *object);

  const gchar * (*get_serial) (OfonoGDBusModem *object);

  const gchar * (*get_type_) (OfonoGDBusModem *object);

  void (*property_changed) (
    OfonoGDBusModem *object,
    const gchar *arg_name,
    GVariant *arg_value);

};

GType ofono_gdbus_modem_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *ofono_gdbus_modem_interface_info (void);
guint ofono_gdbus_modem_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void ofono_gdbus_modem_complete_get_properties (
    OfonoGDBusModem *object,
    GDBusMethodInvocation *invocation,
    GVariant *properties);

void ofono_gdbus_modem_complete_set_property (
    OfonoGDBusModem *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void ofono_gdbus_modem_emit_property_changed (
    OfonoGDBusModem *object,
    const gchar *arg_name,
    GVariant *arg_value);



/* D-Bus method calls: */
void ofono_gdbus_modem_call_get_properties (
    OfonoGDBusModem *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean ofono_gdbus_modem_call_get_properties_finish (
    OfonoGDBusModem *proxy,
    GVariant **out_properties,
    GAsyncResult *res,
    GError **error);

gboolean ofono_gdbus_modem_call_get_properties_sync (
    OfonoGDBusModem *proxy,
    GVariant **out_properties,
    GCancellable *cancellable,
    GError **error);

void ofono_gdbus_modem_call_set_property (
    OfonoGDBusModem *proxy,
    const gchar *arg_property,
    GVariant *arg_value,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean ofono_gdbus_modem_call_set_property_finish (
    OfonoGDBusModem *proxy,
    GAsyncResult *res,
    GError **error);

gboolean ofono_gdbus_modem_call_set_property_sync (
    OfonoGDBusModem *proxy,
    const gchar *arg_property,
    GVariant *arg_value,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean ofono_gdbus_modem_get_powered (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_powered (OfonoGDBusModem *object, gboolean value);

gboolean ofono_gdbus_modem_get_online (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_online (OfonoGDBusModem *object, gboolean value);

gboolean ofono_gdbus_modem_get_lockdown (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_lockdown (OfonoGDBusModem *object, gboolean value);

gboolean ofono_gdbus_modem_get_emergency (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_emergency (OfonoGDBusModem *object, gboolean value);

const gchar *ofono_gdbus_modem_get_name (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_name (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_name (OfonoGDBusModem *object, const gchar *value);

const gchar *ofono_gdbus_modem_get_manufacturer (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_manufacturer (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_manufacturer (OfonoGDBusModem *object, const gchar *value);

const gchar *ofono_gdbus_modem_get_model (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_model (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_model (OfonoGDBusModem *object, const gchar *value);

const gchar *ofono_gdbus_modem_get_revision (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_revision (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_revision (OfonoGDBusModem *object, const gchar *value);

const gchar *ofono_gdbus_modem_get_serial (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_serial (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_serial (OfonoGDBusModem *object, const gchar *value);

const gchar *const *ofono_gdbus_modem_get_features (OfonoGDBusModem *object);
gchar **ofono_gdbus_modem_dup_features (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_features (OfonoGDBusModem *object, const gchar *const *value);

const gchar *const *ofono_gdbus_modem_get_interfaces (OfonoGDBusModem *object);
gchar **ofono_gdbus_modem_dup_interfaces (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_interfaces (OfonoGDBusModem *object, const gchar *const *value);

const gchar *ofono_gdbus_modem_get_type_ (OfonoGDBusModem *object);
gchar *ofono_gdbus_modem_dup_type_ (OfonoGDBusModem *object);
void ofono_gdbus_modem_set_type_ (OfonoGDBusModem *object, const gchar *value);


/* ---- */

#define OFONO_GDBUS_TYPE_MODEM_PROXY (ofono_gdbus_modem_proxy_get_type ())
#define OFONO_GDBUS_MODEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), OFONO_GDBUS_TYPE_MODEM_PROXY, OfonoGDBusModemProxy))
#define OFONO_GDBUS_MODEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), OFONO_GDBUS_TYPE_MODEM_PROXY, OfonoGDBusModemProxyClass))
#define OFONO_GDBUS_MODEM_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), OFONO_GDBUS_TYPE_MODEM_PROXY, OfonoGDBusModemProxyClass))
#define OFONO_GDBUS_IS_MODEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), OFONO_GDBUS_TYPE_MODEM_PROXY))
#define OFONO_GDBUS_IS_MODEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), OFONO_GDBUS_TYPE_MODEM_PROXY))

typedef struct _OfonoGDBusModemProxy OfonoGDBusModemProxy;
typedef struct _OfonoGDBusModemProxyClass OfonoGDBusModemProxyClass;
typedef struct _OfonoGDBusModemProxyPrivate OfonoGDBusModemProxyPrivate;

struct _OfonoGDBusModemProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OfonoGDBusModemProxyPrivate *priv;
};

struct _OfonoGDBusModemProxyClass
{
  GDBusProxyClass parent_class;
};

GType ofono_gdbus_modem_proxy_get_type (void) G_GNUC_CONST;

void ofono_gdbus_modem_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OfonoGDBusModem *ofono_gdbus_modem_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OfonoGDBusModem *ofono_gdbus_modem_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void ofono_gdbus_modem_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OfonoGDBusModem *ofono_gdbus_modem_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OfonoGDBusModem *ofono_gdbus_modem_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


G_END_DECLS

#endif /* __GDBUSMODEM_H__ */
